---

- name: Adding Telegraf group
  group:
    name: "{{ telegraf_agent_group }}"
    gid: "{{ telegraf_gid_docker }}"
    state: present

- name: Adding Telegraf user
  user:
    name: "{{ telegraf_agent_user }}"
    group: "{{ telegraf_agent_group }}"
    state: present
    uid: "{{ telegraf_uid_docker }}"
    create_home: False
    system: True
  become: yes

- name: Create Telegraf agent (home) directory
  file:
    path: "{{ telegraf_agent_config_path }}"
    owner: "{{ telegraf_agent_user }}"
    group: "{{ telegraf_agent_group }}"
    mode: 0750
    state: directory
  become: yes

- name: Create telegraf.d directory
  file:
    path: "{{ telegraf_agent_config_path }}/telegraf.d"
    owner: "{{ telegraf_agent_user }}"
    group: "{{ telegraf_agent_group }}"
    mode: 0750
    state: directory
  become: yes

- name: Ensure Telegraf Docker container is running
  docker_container:
    user: "{{ telegraf_uid_docker }}:{{ telegraf_gid_docker }}"
    name: "{{ telegraf_agent_docker_name }}"
    image: "{{ telegraf_agent_docker_registry }}telegraf:{{ telegraf_agent_docker_image_version }}"
    state: started
    restart_policy: "{{ telegraf_agent_docker_restart_policy }}"
    command: -config /etc/telegraf/telegraf.conf -config-directory /etc/telegraf/telegraf.d
    network_mode: "{{ telegraf_agent_docker_network_mode }}"
    networks:
      - name: "{{ telegraf_agent_docker_network }}"
    ports:
      "{{ telegraf_agent_docker_exposed_ports }}"
    security_opts:
      - apparmor:unconfined
    volumes:
      - "{{ telegraf_agent_config_path }}:/etc/telegraf:ro"
      - /:/hostfs:ro
      - /etc:/hostfs/etc:ro
      - /proc:/hostfs/proc:ro
      - /sys:/hostfs/sys:ro
      - /var/run:/var/run:ro
    env:
      HOST_MOUNT_PREFIX: /hostfs
      HOST_ETC: /hostfs/etc
      HOST_PROC: /hostfs/proc
      HOST_SYS: /hostfs/sys
